name: Run Maestro Test with Recording and Artifact Upload

on:
  push: {}
  workflow_dispatch: {}

jobs:
  run-maestro:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out your repository code.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install the latest Maestro CLI using the official installer.
      - name: Install Maestro CLI
        run: |
          curl -Ls "https://get.maestro.mobile.dev" | bash
          # Add Maestro to the PATH for subsequent steps.
          echo "$HOME/.maestro/bin" >> $GITHUB_PATH

      # Step 3: Verify the Maestro CLI installation.
      - name: Verify Maestro CLI
        run: maestro --version

      # Step 4: Start Android emulator using ReactiveCircus/android-emulator-runner.
      - name: Start Android Emulator
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: 31
          target: google_apis
          arch: x86_64
          emulator-boot-timeout: 1200  # 20 minutes in seconds
          script: |
            adb kill-server
            adb start-server
            adb devices

      # Step 5: Run your Maestro flow and record it.
      - name: Run Maestro Flow Recording
        id: run_test
        run: |
          # Execute Maestro in record mode and capture its output.
          OUTPUT=$(maestro record src/maestro/test.yaml)
          echo "$OUTPUT"
          # Extract the signed URL (assuming it starts with "https://").
          RECORDING_URL=$(echo "$OUTPUT" | grep -Eo 'https://[^ ]+')
          echo "Recording URL: $RECORDING_URL"
          # Save the URL for later use.
          echo "$RECORDING_URL" > recording_url.txt

      # Step 6: Download the recording file from the signed URL.
      - name: Download Maestro Recording
        run: |
          RECORDING_URL=$(cat recording_url.txt)
          echo "Downloading recording from $RECORDING_URL"
          # Append a timestamp to the file name to avoid collisions.
          TIMESTAMP=$(date +%s)
          curl -L "$RECORDING_URL" -o recording-${TIMESTAMP}.mp4
          # Save the resulting filename.
          echo "recording-${TIMESTAMP}.mp4" > recording_file.txt

      # Step 7: Upload the recording file as an artifact.
      - name: Upload Maestro Recording Artifact
        uses: actions/upload-artifact@v4
        with:
          name: maestro-recording
          path: $(cat recording_file.txt)
